// üéØ ESCOPO GLOBAL, LOCAL (FUN√á√ÉO) E DE BLOCO

// ‚úÖ O que √© Escopo?
// Escopo determina onde uma vari√°vel est√° dispon√≠vel para ser acessada no c√≥digo.

// 1Ô∏è‚É£ Escopo Global:
// Vari√°veis declaradas fora de qualquer fun√ß√£o ou bloco.
// Est√£o dispon√≠veis em todo o c√≥digo.

let global = "Sou Global"; // Vari√°vel de escopo global

// 2Ô∏è‚É£ Escopo Local (Fun√ß√£o):
// Vari√°veis declaradas dentro de uma fun√ß√£o s√≥ podem ser acessadas dentro dessa fun√ß√£o.

function minhaFuncao() {
  let localFuncao = "Sou Local da Fun√ß√£o"; // Vari√°vel local da fun√ß√£o
  console.log(global);       // ‚úÖ Acessa vari√°vel global
  console.log(localFuncao);  // ‚úÖ Acessa vari√°vel local da fun√ß√£o
}

minhaFuncao();

console.log(global);      // ‚úÖ Acessa vari√°vel global
// console.log(localFuncao);  // ‚ùå Erro: vari√°vel localFuncao n√£o est√° acess√≠vel aqui (fora da fun√ß√£o)


// 3Ô∏è‚É£ Escopo de Bloco:
// Vari√°veis declaradas com 'let' ou 'const' dentro de blocos (ex: if, for, while) s√≥ existem dentro desse bloco.

if (true) {
  let bloco = "Sou do Bloco";  // Vari√°vel local ao bloco
  console.log(global);  // ‚úÖ Acessa vari√°vel global
  console.log(bloco);   // ‚úÖ Acessa vari√°vel local do bloco
}

console.log(global);  // ‚úÖ Acessa vari√°vel global
// console.log(bloco); // ‚ùå Erro: vari√°vel bloco n√£o existe fora do bloco 'if'


/*
üìã Resumo r√°pido do Escopo:

| Escopo          | Onde √© acess√≠vel?                     | Declara√ß√£o t√≠pica                      |
|-----------------|-------------------------------------|---------------------------------------|
| Global          | Em todo o c√≥digo                    | var, let, const fora de fun√ß√µes/blocos|
| Local (Fun√ß√£o)  | Dentro da fun√ß√£o onde foi declarada | let, const dentro da fun√ß√£o            |
| Bloco           | Dentro do bloco onde foi declarado  | let, const dentro de { ... }           |
*/
