// ==================================================
// ðŸ”¥ OPERADORES ARITMÃ‰TICOS EM JAVASCRIPT
// ==================================================

// ==================================================
// ðŸ”¸ AdiÃ§Ã£o âž•
let valor = 10;
let segundoValor = 20;

console.log(valor + segundoValor); // 30 â†’ Soma de dois nÃºmeros

let msg = "12";
console.log(msg + valor); // "1210" â†’ Quando hÃ¡ string, faz CONCATENAÃ‡ÃƒO

// ==================================================
// ðŸ”¸ SubtraÃ§Ã£o âž–
console.log(valor - segundoValor); // -10
console.log(segundoValor - valor); // 10

// ==================================================
// ðŸ”¸ DivisÃ£o âž—
console.log(valor / segundoValor); // 0.5
console.log(segundoValor / valor); // 2

// ==================================================
// ðŸ”¸ MÃ³dulo (Resto da divisÃ£o) âž—âž—
console.log(valor % segundoValor); // 10 â†’ 10 nÃ£o cabe nenhuma vez dentro de 20, sobra 10
console.log(segundoValor % valor); // 0  â†’ 20 dividido por 10 nÃ£o tem sobra

// ==================================================
// ðŸ”¥ OPERADORES ARITMÃ‰TICOS AVANÃ‡ADOS
// ==================================================

// ðŸ”¹ ExponenciaÃ§Ã£o â†’ PotÃªncia (base elevado ao expoente)
let base = 2;
let expoente = 5;
let resultado = base ** expoente;

console.log(resultado); // 32 â†’ 2 elevado a 5

// ==================================================
// ðŸ”¹ Incremento (++) e Decremento (--)
// ==================================================

// âž• Incremento (++): Adiciona 1
// âž– Decremento (--): Subtrai 1

let controle = 0;

// Incremento depois de exibir (PÃ³s-incremento)
console.log(controle++); // Mostra 0, depois soma +1

// Agora controle vale 1
console.log(controle); // 1

// Incremento antes de exibir (PrÃ©-incremento)
console.log(++controle); // Soma +1 antes de exibir â†’ Mostra 2

// ==================================================
// ðŸ”¥ Exemplo prÃ¡tico usando Incremento em um loop
for (let i = 1; i <= 10; ++i) {
  console.log(i); // Conta de 1 atÃ© 10
}

/*
ðŸ“Œ Obs:
- ++i (prÃ©-incremento): incrementa antes de usar o valor
- i++ (pÃ³s-incremento): usa o valor, depois incrementa

No for, tanto faz ++i ou i++, pois a ordem de incremento acontece no final de cada ciclo.
*/
